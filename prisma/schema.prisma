generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Item {
  id             String   @id @default(cuid())
  name           String
  scientificName String   
  slug           String   @unique
  description    String?
  habitat        String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  images         Image[]
  collections    ItemCollection[]
}

model Image {
  id        String   @id @default(cuid())
  itemId    String
  key       String   @unique
  url       String
  caption   String?
  altText   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  item      Item     @relation(fields: [itemId], references: [id])
}

model Collection {
  id          String   @id @default(cuid())
  name        String
  description String?
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  items       ItemCollection[]
  completedBy VisitorCollectionCompleted[]
}

model ItemCollection {
  id          Int         @id @default(autoincrement())
  itemId      String
  collectionId String
  item        Item        @relation(fields: [itemId], references: [id], onDelete: Cascade)
  collection  Collection  @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  
  @@unique([itemId, collectionId])
}

model Visitor {
  id                    Int           @id @default(autoincrement())
  name                  String
  city                  String
  state                 String?
  country               String
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  collectionsCompleted  VisitorCollectionCompleted[]
}

model VisitorCollectionCompleted {
  id                    Int           @id @default(autoincrement())
  visitorId             Int
  collectionId          String
  completedAt           DateTime      @default(now())
  visitor               Visitor       @relation(fields: [visitorId], references: [id], onDelete: Cascade)
  collection            Collection    @relation(fields: [collectionId], references: [id], onDelete: Cascade)

  @@unique([visitorId, collectionId])
}
