services:
  inpsyght:
    container_name: inpsyght
    build:
      context: ./inpsyght-backend
      dockerfile: Dockerfile
    image: inpsyght:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: ${DATABASE_SSL}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
      DATABASE_SSL_CA: ${DATABASE_SSL_CA}
      STRAPI_LOG_LEVEL: debug
    volumes:
      - ./inpsyght-backend/config:/opt/app/config
      - ./inpsyght-backend/src:/opt/app/src
      - ./inpsyght-backend/package.json:/opt/inpsyght-backend/package.json
      - ./inpsyght-backend/package-lock.json:/opt/inpsyght-backend/package-lock.json
      - .env:/opt/app/.env
      - ./inpsyght-backend/public/uploads:/opt/app/public/uploads
      - ./inpsyght-backend/config/certs/supabase-ca.crt:/opt/app/certs/supabase-ca.crt
    ports:
      - '1337:1337'
    networks:
      - inpsyght

  # inpsyghtFrontend: 
  #   container_name: inpsyghtFrontend
  #   build: 
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   env_file: .env
  #   image: inpsyght-frontend:latest
  #   restart: unless-stopped
  #   ports: 
  #     - '3000:3000'
  #   environment:
  #     NODE_ENV: ${NODE_ENV}

networks:
  inpsyght:
    name: Inpsyght
    driver: bridge
